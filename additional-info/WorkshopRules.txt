
The main characteristics of a workshop are:

* Requires a hands-on software development activity.
* A workshop has a well defined scope, which is partially suggested by the name (e.g.: Akka Workshop's scope is to explore the Akka framework, its features, limitations and integration possibilities with other technologies).
* Each workshop should provide Endava stuff with (one or more) presentations designed to share the knowledge and experience achieved during this activity.
* A workshop may not necessarily end up with a stable release of a software product, the main purpose being to reach the scope (which is usually to explore a set of technologies rather than providing a product).
* The code and other software components developed within the workshop should be shared in a centralized repository which is available to all Endava stuff.
* A workshop has 1 or more participants.
* Abandoning the workshop should be allowed at any point in time.
* Accountability: the work done, at both workshop level and individual level of each participant is accountable by the physical outcome (e.g.: written code, analysis and architecture documets if any etc.) which is transparent at Endava (or public) level and by the presentations done for the workshop in front of Endava audience.
* A workshop has an organizer (the person initiating it), who also acts as a workshop lead and is responsible to maintain the communication along the team. However, this does not impose special restrictions for this person. Just like any other participant, the lead is free to leave at any point if he/she decides this. Such a case should not affect the workshop, as long as a replacement is found.

* A workshop should specify a desired (not required) experience level. This is specified as a guide line, so the participants should know what kind of technical knowledge is expected.
* A workshop should provide a list of documentation resources. The list should be available from the beginning and could (should) be updated during the workshop.
* A workshop should have goals. This is useful to determine when the workshop will finish. If other goals are added the workshop can be extended, or created a new one, with new requirements.
* A workshop should have a maximum period of time allocated. If the topics / goals take more than that maximum time, they can be reviewed and shortened, or the workshop can be split.
* A workshop can continue the work done by other workshops. The participants can be the same people or others. No restrictions apply.

* A workshop should not have more than 6-8 members. Having more members implies to develop a more complex project and is hard to be follwed and managed.
* A workshop's project should be seaparated in individual parts on which the members can work in the same time without having conflicts.
* One each module or component from a workshop there should be at least two members working on it for having in this way the guarantee that the project will evolve even if one member is too busy in a period.
* A workshop should have a main purpose and that purpose should be followed all the time
* A workshop can add secondary purposes, but these should not require too much time and should not cover the main purpose
* A workshop should have very well delimited periods of development and at the end it should provide a working solution or concrete results on the main purpose
* A workshop should not have a development/technical lead and everyone should be actively implied in taking any kind of decision as long as the main purpose is kept
